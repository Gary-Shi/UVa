#include <iostream>
#include <cstdio>
#include <iomanip>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <limits.h>
#include <float.h>
#include <sstream>
#include <cmath>

using namespace std;

int g0[1005] = {}, goal[1005] = {};
int len0 = 0;
int dp[10][10][1005] = {};

int Dp(int num1, int num2, int lenNow)
{
	if (dp[num1][num2][lenNow] != -1)
		return dp[num1][num2][lenNow];
	int &ans = dp[num1][num2][lenNow];
	if (lenNow == 0)
	{
		int t = 10000;
		//ÏòÉÏ×ª
		int r = (goal[lenNow + 1] - num1 + 10) % 10;
		int d2 = (goal[lenNow] - num2 + 10) % 10;
		int r2;
		if (r > d2)
			r2 = 0;
		else if (d2 - r < 10 - d2)
			r2 = d2 - r;
		else
			r2 = 10 - d2;
		t = min(t, r + r2);
		
		//ÏòÏÂ×ª
		r = (num1 - goal[lenNow + 1] + 10) % 10;
		d2 = (num2 - goal[lenNow] + 10) % 10;
		if (r > d2)
			r2 = 0;
		else if (d2 - r < 10 - d2)
			r2 = d2 - r;
		else
			r2 = 10 - d2;
		t = min(t, r + r2);
		
		return (ans = t);
	}
	ans = 10000;
	//ÏòÉÏ×ª
	int r = (goal[lenNow + 1] - num1 + 10) % 10;
	int r2[2] = {};
	int d2 = (goal[lenNow] - num2 + 10) % 10;
	int num2Next[2], num3Next;
	if (r > d2)
	{
		num2Next[0] = num2Next[1] = goal[lenNow];
		r2[0] = r2[1] = d2;
	}
	else
	{
		num2Next[0] = (num2 + r) % 10;
		num2Next[1] = num2;
		r2[0] = r;
		r2[1] = 0;
	}
	for (int i = 0; i <= r2[0]; ++i)
	{
		num3Next = (g0[lenNow - 1] + i) % 10;
		ans = min(ans, Dp(num2Next[0], num3Next, lenNow - 1) + r);
	}
	for (int i = 0; i <= r2[1]; ++i)
	{
		num3Next = (g0[lenNow - 1] + i) % 10;
		ans = min(ans, Dp(num2Next[1], num3Next, lenNow - 1) + r);
	}
	
	//ÏòÏÂ×ª
	r = (num1 - goal[lenNow + 1] + 10) % 10;
	d2 = (num2 - goal[lenNow] + 10) % 10;
	if (r > d2)
	{
		num2Next[0] = num2Next[1] = goal[lenNow];
		r2[0] = r2[1] = d2;
	}
	else
	{
		num2Next[0] = (num2 - r + 10) % 10;
		num2Next[1] = num2;
		r2[0] = r;
		r2[1] = 0;
	}
	for (int i = 0; i <= r2[0]; ++i)
	{
		num3Next = (g0[lenNow - 1] - i + 10) % 10;
		ans = min(ans, Dp(num2Next[0], num3Next, lenNow - 1) + r);
	}
	for (int i = 0; i <= r2[1]; ++i)
	{
		num3Next = (g0[lenNow - 1] - i + 10) % 10;
		ans = min(ans, Dp(num2Next[1], num3Next, lenNow - 1) + r);
	}
	
	return ans;
}

int main()
{
	//freopen("testout.txt", "w", stdout);
	string s;
	while (cin >> s)
	{
		len0 = s.length();
		stringstream ss(s);
		char c;
		for (int i = 0; i < len0; ++i)
		{
			ss >> c;
			g0[i] = (int)c - 48;
		}
		cin >> s;
		ss.clear();
		ss.str(s);
		for (int i = 0; i < len0; ++i)
		{
			ss >> c;
			goal[i] = (int)c - 48;
		}
		if (len0 == 1)
		{
			cout << min((goal[0] - g0[0] + 10) % 10, (g0[0] - goal[0] + 10) % 10) << endl;
			continue;
		}
		for (int i = 0; i < 10; ++i)
		{
			for (int j = 0; j < 10; ++j)
				memset(dp[i][j], -1, sizeof(dp[i][j]));
		}
		cout << Dp(g0[len0 - 1], g0[len0 - 2], len0 - 2) << endl;
		//cout << g0[len0 - 1] << goal[len0 - 1];
	}
	
	return 0;
}
